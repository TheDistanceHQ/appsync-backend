schema {
  query: Query
  mutation: Mutation
}

type Query {
  getImageUploadUrl(extension: String, contentType: String): AWSURL!
  getMyProfile: MyProfile!
  getOtherProfile(screenName: String!): OtherProfile!
  getMyTimeline(limit: Int!, nextToken: String): TimelinePage
  getTweets(userId: ID!, limit: Int!, nextToken: String): TweetsPage!
  getLikes(userId:ID!, limit: Int!, nextToken: String): TweetsPage!
  getFollowers(userId:ID!, limit: Int!, nextToken: String): ProfilesPage!
  getFollowing(userId:ID!, limit: Int!, nextToken: String): ProfilesPage!
}

type Mutation {
  editMyProfile(newProfile: ProfileInput): MyProfile!
  tweet(text: String!): Tweet!
  like(tweetId: ID!): Boolean!
  unlike(tweetId: ID!): Boolean!
  retweet(tweetId: ID!): Retweet!
  reply(tweetId: ID!, text: String!): Reply!
  follow(userId: ID!): Boolean!
  unfollow(userId: ID!): Boolean!
}

input ProfileInput {
  id: ID!
  name: String!
  screenName: String!
  imageUrl: AWSURL
  backgroundImageUrl: AWSURL
  bio: String
  location: String
}
interface IProfile {
  id: ID!
  name: String!
  screenName: String!
  imageUrl: AWSURL
  backgroundImageUrl: AWSURL
  bio: String
  location: String
  createdAt: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweetsCount: Int!
  likesCounts: Int!
  tweets: TweetsPage
}

type MyProfile implements IProfile {
  id: ID!
  name: String!
  screenName: String!
  imageUrl: AWSURL
  backgroundImageUrl: AWSURL
  bio: String
  location: String
  createdAt: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweets: TweetsPage
  tweetsCount: Int!
  likesCounts: Int!
}

type OtherProfile implements IProfile{
  id: ID!
  name: String!
  screenName: String!
  imageUrl: AWSURL
  backgroundImageUrl: AWSURL
  bio: String
  location: String
  createdAt: AWSDateTime!
  followersCount: Int!
  followingCount: Int!
  tweets: TweetsPage
  following: Boolean!
  followedBy: Boolean!
  tweetsCount: Int!
  likesCounts: Int!
}

type ProfilesPage {
  profiles: [IProfile!]
  nextToken: String
}
interface ITweet {
  id: ID!
  profile: IProfile
  createdAt: AWSDateTime!
}

type Tweet implements ITweet {
  id: ID!
  profile: IProfile
  createdAt: AWSDateTime!
  text: String!
  replies: Int!
  likes: Int!
  retweets: Int!
  liked: Boolean!
  retweeted: Boolean!
}

type Reply implements ITweet {
  id: ID!
  profile: IProfile
  createdAt: AWSDateTime!
  inReplyToTweet: ITweet!
  inReplyToUsers: [IProfile!]
  text: String!
  replies: Int!
  likes: Int!
  retweets: Int!
  liked: Boolean!
  retweeted: Boolean!
}

type Retweet implements ITweet {
  id: ID!
  profile: IProfile
  createdAt: AWSDateTime!
  retweetOf: ITweet!
}

type TweetsPage {
  tweets: [ITweet!]
  nextToken: String
}

type TimelinePage {
  tweets: [ITweet!]
  nextToken: String
}